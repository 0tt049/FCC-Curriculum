* --description--
  :PROPERTIES:
  :CUSTOM_ID: description
  :END:
The =some= method works with arrays to check if /any/ element passes a
particular test. It returns a Boolean value - =true= if any of the
values meet the criteria, =false= if not.

For example, the following code would check if any element in the
=numbers= array is less than 10:

#+begin_src js
const numbers = [10, 50, 8, 220, 110, 11];

numbers.some(function(currentValue) {
  return currentValue < 10;
});
#+end_src

The =some= method would return =true=.

* --instructions--
  :PROPERTIES:
  :CUSTOM_ID: instructions
  :END:
Use the =some= method inside the =checkPositive= function to check if
any element in =arr= is positive. The function should return a Boolean
value.

* --hints--
  :PROPERTIES:
  :CUSTOM_ID: hints
  :END:
Your code should use the =some= method.

#+begin_src js
assert(code.match(/\.some/g));
#+end_src

=checkPositive([1, 2, 3, -4, 5])= should return =true=.

#+begin_src js
assert(checkPositive([1, 2, 3, -4, 5]));
#+end_src

=checkPositive([1, 2, 3, 4, 5])= should return =true=.

#+begin_src js
assert(checkPositive([1, 2, 3, 4, 5]));
#+end_src

=checkPositive([-1, -2, -3, -4, -5])= should return =false=.

#+begin_src js
assert(!checkPositive([-1, -2, -3, -4, -5]));
#+end_src

* --seed--
  :PROPERTIES:
  :CUSTOM_ID: seed
  :END:
** --seed-contents--
   :PROPERTIES:
   :CUSTOM_ID: seed-contents
   :END:
#+begin_src js
function checkPositive(arr) {
  // Only change code below this line


  // Only change code above this line
}

checkPositive([1, 2, 3, -4, 5]);
#+end_src

* --solutions--
  :PROPERTIES:
  :CUSTOM_ID: solutions
  :END:
#+begin_src js
function checkPositive(arr) {
  return arr.some(elem => elem > 0);
}
#+end_src
